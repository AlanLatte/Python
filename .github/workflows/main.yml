# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Check code quality

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  linters:
    env:
       FILES_TO_CHECK: 'app tests'

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3

    - name: Start procesing Linters for code quality
      run: |
        poetry install --only linters,formatters

        poetry run flake8 ${{ env.FILES_TO_CHECK }}
        poetry run docformatter -cr ${{ env.FILES_TO_CHECK }}
        poetry run black --check ${{ env.FILES_TO_CHECK }}
#        poetry run mypy ${{ env.FILES_TO_CHECK }}

  sasts:
    env:
       FILES_TO_CHECK: 'app tests'

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3

    - name: Start procesing Sasts for code quality
      run: |
        poetry install --only sasts

        poetry run bandit -r ${{ env.FILES_TO_CHECK }} -x tests
        poetry run safety check --full-report

  tests:
    runs-on: self-hosted
    needs: [linters, sasts]

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3


    - name: Dump env to file.
      run: echo "${{ secrets.ENV_FILE }}" > .env
    - name: Start tests with pytest
      run: |
        poetry install --only tests
        poetry run pytest tests
