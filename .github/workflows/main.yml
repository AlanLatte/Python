# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    env:
       FILES_TO_CHECK: 'app tests'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        cache: 'poetry'

  linters:
    runs-on: ubuntu-latest
    needs: build

    - name: Start procesing Linters for code quality
      run: |
        poetry install --only linters,formatters

        poetry run flake8 ${{ env.FILES_TO_CHECK }}
        poetry run docformatter -cr ${{ env.FILES_TO_CHECK }}
        poetry run black --check ${{ env.FILES_TO_CHECK }}
#        poetry run mypy ${{ env.FILES_TO_CHECK }}

  sasts:
    runs-on: ubuntu-latest
    needs: build

    - name: Start procesing Sasts for code quality
      run: |
        poetry install --only sasts

        poetry run bandit -r ${{ env.FILES_TO_CHECK }} -x tests
        poetry run safety check --full-report

  tests:
    runs-on: ubuntu-latest
    needs: [build, linters, sasts]

    - run: poetry install --only main
    - name: Test with pytest
      run: |
        poetry install --only tests
        poetry run pytest tests