x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:5555/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 30s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile

    restart: always

    env_file:
      - .env
    environment:
      - API__INSTANCE_APP_NAME=template-api
      - POSTGRES__HOST=postgres
      - POSTGRES__PORT=5432
      - API__OPEN_TELEMETRY_GRPC_ENDPOINT=http://tempo:4317
    depends_on:
      - postgres
      - migrations
      - redis
    ports:
      - ${API__PORT}:5000

    logging: *default-logging

    command: [
      "poetry", "run", "uvicorn", "app:create_app",
      "--host", "0.0.0.0",
      "--port", '5000',
      "--log-config", "./logs.yaml",
    ]

  postgres:
    build:
      context: .
      dockerfile: docker/postgresql/Dockerfile

    restart: always

    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES__PASSWORD}
      - POSTGRES_USER=${POSTGRES__USER}
      - POSTGRES_DATABASES="test_${POSTGRES__DATABASE_NAME}","${POSTGRES__DATABASE_NAME}"
    ports:
      - ${POSTGRES__PORT}:5432
    volumes:
      - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data/pgdata

  migrations:
    build:
      context: .
      dockerfile: docker/migrations/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES__HOST=postgres
      - POSTGRES__PORT=5432
    depends_on:
      - postgres
    command: [
        "bash", "./scripts/wait-for-server.sh", "postgres:5432", "-t", "120",
        "--",
        "poetry", "run", "python", "-m", "scripts.migrate"
    ]

  redis:
    build:
      context: .
      dockerfile: docker/redis/Dockerfile

    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    volumes:
      - ${REDIS_DATA_VOLUME}:/data

  grafana:
    build:
      context: .
      dockerfile: docker/grafana/Dockerfile
    env_file:
      - .env
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - ${GRAFANA_PORT}:3000
    depends_on:
      - prometheus
      - loki
      - tempo

    logging: *default-logging

    volumes:
      - ${GRAFANA_VOLUME}:/var/lib/grafana
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:latest

    user: root
    env_file:
      - .env
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./src/prometheus:/prometheus
    depends_on:
      - centrifugo
      - api
      - loki
    command:
      - --config.file=/etc/prometheus/prometheus.yml

    logging: *default-logging

  centrifugo:
    build:
      context: .
      dockerfile: docker/centrifugo/Dockerfile
    env_file:
      - .env
    environment:
      - API_SERVER=api
      - API_SERVER_PORT=5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - ${CENTRIFUGO__PORT}:8000
    volumes:
      - ${CENTRIFUGO_DATA_VOLUME}:/var/log/centrifugo
    depends_on:
      - api
    command: [ "sh", "init.centrifugo.sh" ]

  tempo:
    image: grafana/tempo:1.5.0
    command: ["--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "${TEMPO_PORT}:14250"
      - "4317:4317"
    depends_on:
      - loki

    logging: *default-logging

  loki:
    image: grafana/loki:2.6.1
    command: -config.file=/etc/loki/local-config.yaml
    env_file:
      - .env
    ports:
      - "${LOKI_PORT}:3100"


networks:
  default:
    driver: bridge
